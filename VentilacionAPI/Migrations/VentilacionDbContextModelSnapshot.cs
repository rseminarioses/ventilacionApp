// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VentilacionAPI.Models;

namespace VentilacionAPI.Migrations
{
    [DbContext(typeof(VentilacionDbContext))]
    partial class VentilacionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VentilacionAPI.Models.FlujoAire", b =>
                {
                    b.Property<int>("FlujoAireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrificioVentilacionId")
                        .HasColumnType("int");

                    b.Property<int>("RegistroVentilacionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("FlujoAireId");

                    b.HasIndex("OrificioVentilacionId");

                    b.HasIndex("RegistroVentilacionId");

                    b.ToTable("FlujoAire");
                });

            modelBuilder.Entity("VentilacionAPI.Models.Habitacion", b =>
                {
                    b.Property<int>("HabitacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Alto")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("Ancho")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("Largo")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("SedeId")
                        .HasColumnType("int");

                    b.HasKey("HabitacionId");

                    b.HasIndex("SedeId");

                    b.ToTable("Habitacion");
                });

            modelBuilder.Entity("VentilacionAPI.Models.OrificioVentilacion", b =>
                {
                    b.Property<int>("OrificioVentilacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Alto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Ancho")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AreaTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("HabitacionId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("varchar(50)");

                    b.HasKey("OrificioVentilacionId");

                    b.HasIndex("HabitacionId");

                    b.ToTable("OrificioVentilacion");
                });

            modelBuilder.Entity("VentilacionAPI.Models.RegistroVentilacion", b =>
                {
                    b.Property<int>("RegistroVentilacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("RegistroVentilacionId");

                    b.ToTable("RegistroVentilacion");
                });

            modelBuilder.Entity("VentilacionAPI.Models.Sede", b =>
                {
                    b.Property<int>("SedeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)");

                    b.HasKey("SedeId");

                    b.ToTable("Sede");
                });

            modelBuilder.Entity("VentilacionAPI.Models.FlujoAire", b =>
                {
                    b.HasOne("VentilacionAPI.Models.OrificioVentilacion", "OrificioVentilacion")
                        .WithMany()
                        .HasForeignKey("OrificioVentilacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VentilacionAPI.Models.RegistroVentilacion", "RegistroVentilacion")
                        .WithMany("FlujosAire")
                        .HasForeignKey("RegistroVentilacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrificioVentilacion");

                    b.Navigation("RegistroVentilacion");
                });

            modelBuilder.Entity("VentilacionAPI.Models.Habitacion", b =>
                {
                    b.HasOne("VentilacionAPI.Models.Sede", "Sede")
                        .WithMany()
                        .HasForeignKey("SedeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sede");
                });

            modelBuilder.Entity("VentilacionAPI.Models.OrificioVentilacion", b =>
                {
                    b.HasOne("VentilacionAPI.Models.Habitacion", "Habitacion")
                        .WithMany()
                        .HasForeignKey("HabitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habitacion");
                });

            modelBuilder.Entity("VentilacionAPI.Models.RegistroVentilacion", b =>
                {
                    b.Navigation("FlujosAire");
                });
#pragma warning restore 612, 618
        }
    }
}
